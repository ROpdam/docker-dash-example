name: Continuous Integration and Delivery

on: 
  push:
    branches:
      - master

env:
  IMAGE: docker.pkg.github.com/$(echo $GITHUB_REPOSITORY | tr '[A-Z]' '[a-z]')/app

jobs:

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v3
      - name: Log in to Github Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull image
        run: |
          docker pull ${{ env.IMAGE }}:latest || true
      - name: Build Image
        run: |
          docker build \
            --cache-from ${{ env.IMAGE }}:latest \
            --tag ${{ env.IMAGE }}:latest \
            --file ./project/Dockerfile.prod \
            "./project"
      - name: Push image
        run: |
          docker push ${{ env.IMAGE }}:latest
  
  deploy:
    name: Deploy to Google Cloud Run
    runs-on: ubuntu-latest
    needs: [build]
    env:
      IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}
    steps:
    - name: Checkout master
      uses: actions/checkout@v3
    - name: Log in to Github Packages
      run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Pull image
      run: |
        docker pull ${{ env.IMAGE }}:latest || true
    - name: Build image
      run: |
        docker build \
        --cache-from ${{ env.IMAGE }}:latest \
        --tag ${{ env.IMAGE_NAME }}:latest \
        --file ./project/Dockerfile.prod \
        "./project"
    - name: Login to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}
    - name: Configure Docker
      run: gcloud auth configure-docker --quiet
    - name: Push to registry
      run: docker push ${{ env.IMAGE_NAME }}
    - id: deploy
      name: Deploy Docker image
      uses: "google-github-actions/deploy-cloudrun@v1"
      with:
        image: ${{ env.IMAGE_NAME }}
        region: europe-north1
        service: app
        flags: --port=8080 --allow-unauthenticated
    - name: Clean up old images
      run: gcloud container images list-tags ${{ env.IMAGE_NAME }} --filter='-tags:*' --format="get(digest)" --limit=10 > tags && while read p; do gcloud container images delete "${{ env.IMAGE_NAME }}@$p" --quiet; done < tags
     
